[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:9:31: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m    Etl.transform(Map(1 -> Seq("A"))) should be(Map("a" -> 1))[0m
[0m[[0m[31merror[0m] [0m[0m                              ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:14:31: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m    Etl.transform(Map(1 -> Seq("A", "E", "I", "O", "U"))) should be(Map("a" -> 1,[0m
[0m[[0m[31merror[0m] [0m[0m                              ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:20:31: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m    Etl.transform(Map(1 -> Seq("A", "E"), 2 -> Seq("D", "G"))) should be(Map("a" -> 1,[0m
[0m[[0m[31merror[0m] [0m[0m                              ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:20:51: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m    Etl.transform(Map(1 -> Seq("A", "E"), 2 -> Seq("D", "G"))) should be(Map("a" -> 1,[0m
[0m[[0m[31merror[0m] [0m[0m                                                  ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:26:31: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m    Etl.transform(Map(1 -> Seq("A", "E", "I", "O", "U", "L", "N", "R", "S", "T"),[0m
[0m[[0m[31merror[0m] [0m[0m                              ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:27:15: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m      2 -> Seq("D", "G"), 3 -> Seq("B", "C", "M", "P"), 4 -> Seq("F", "H", "V", "W", "Y"),[0m
[0m[[0m[31merror[0m] [0m[0m              ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:27:35: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m      2 -> Seq("D", "G"), 3 -> Seq("B", "C", "M", "P"), 4 -> Seq("F", "H", "V", "W", "Y"),[0m
[0m[[0m[31merror[0m] [0m[0m                                  ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:27:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m      2 -> Seq("D", "G"), 3 -> Seq("B", "C", "M", "P"), 4 -> Seq("F", "H", "V", "W", "Y"),[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:28:15: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m      5 -> Seq("K"), 8 -> Seq("J", "X"), 10 -> Seq("Q", "Z"))) should be(Map("a" -> 1,[0m
[0m[[0m[31merror[0m] [0m[0m              ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:28:30: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m      5 -> Seq("K"), 8 -> Seq("J", "X"), 10 -> Seq("Q", "Z"))) should be(Map("a" -> 1,[0m
[0m[[0m[31merror[0m] [0m[0m                             ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/williamburdett/Exercism/scala/etl/src/test/scala/EtlTest.scala:28:51: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Seq[String][0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m      5 -> Seq("K"), 8 -> Seq("J", "X"), 10 -> Seq("Q", "Z"))) should be(Map("a" -> 1,[0m
[0m[[0m[31merror[0m] [0m[0m                                                  ^[0m
[0m[[0m[31merror[0m] [0m[0m11 errors found[0m
